"use client";

import { useEffect, useState } from "react";
import { useScaffoldReadContract } from "~~/hooks/scaffold-eth";

interface Tree {
  id: number;
  treeCount: number;
  location: string;
  donor: string;
  executor: string;
  isVerified: boolean;
  plantedAt: number;
  donationAmount: string;
}

const AvailableTrees = () => {
  const [trees, setTrees] = useState<Tree[]>([]);
  const [loading, setLoading] = useState(true);

  // –ß–∏—Ç–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–µ—Ä–µ–≤—å–µ–≤
  const { data: platformStats } = useScaffoldReadContract({
    contractName: "TreeChain",
    functionName: "getPlatformStats",
  });

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ—Ä–µ–≤—å—è
  useEffect(() => {
    const loadTrees = async () => {
      if (!platformStats) return;

      const totalTrees = Number(platformStats[0]) || 0;
      const availableTrees: Tree[] = [];

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º –¥–µ—Ä–µ–≤–µ
      for (let i = 1; i <= totalTrees; i++) {
        try {
          // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –≤—ã–∑–æ–≤ getTree
          // –ü–æ–∫–∞ —á—Ç–æ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
          const mockTree: Tree = {
            id: i,
            treeCount: Math.floor(Math.random() * 5) + 1, // 1-5 –¥–µ—Ä–µ–≤—å–µ–≤
            location: [
              "–ú–æ—Å–∫–≤–∞, –ø–∞—Ä–∫ –°–æ–∫–æ–ª—å–Ω–∏–∫–∏",
              "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –õ–µ—Ç–Ω–∏–π —Å–∞–¥",
              "–ö–∞–∑–∞–Ω—å, –ø–∞—Ä–∫ –ì–æ—Ä—å–∫–æ–≥–æ",
              "–°–æ—á–∏, –¥–µ–Ω–¥—Ä–∞—Ä–∏–π",
              "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥, –•–∞—Ä–∏—Ç–æ–Ω–æ–≤—Å–∫–∏–π –ø–∞—Ä–∫",
            ][i % 5],
            donor: `0x${Math.random().toString(16).substr(2, 8)}...`,
            executor:
              i % 3 === 0
                ? `0x${Math.random().toString(16).substr(2, 8)}...`
                : "0x0000000000000000000000000000000000000000",
            isVerified: i % 4 === 0,
            plantedAt: i % 3 === 0 ? Date.now() / 1000 : 0,
            donationAmount: ((Math.floor(Math.random() * 5) + 1) * 0.01).toFixed(3) + " ETH",
          };
          availableTrees.push(mockTree);
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ—Ä–µ–≤–∞ ${i}:`, error);
        }
      }

      setTrees(availableTrees);
      setLoading(false);
    };

    loadTrees();
  }, [platformStats]);

  if (loading) {
    return (
      <div className="bg-white rounded-3xl shadow-lg p-6">
        <h3 className="text-lg font-semibold mb-4">üå≥ –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ—Ä–µ–≤—å—è –¥–ª—è –ø–æ—Å–∞–¥–∫–∏</h3>
        <div className="text-center py-8">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-green-600 mx-auto"></div>
          <p className="mt-2 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
        </div>
      </div>
    );
  }

  const availableTrees = trees.filter(
    tree => tree.executor === "0x0000000000000000000000000000000000000000" && !tree.isVerified,
  );

  const totalTreesCount = trees.reduce((sum, tree) => sum + tree.treeCount, 0);
  const availableTreesCount = availableTrees.reduce((sum, tree) => sum + tree.treeCount, 0);

  return (
    <div className="bg-white rounded-3xl shadow-lg p-6">
      <h3 className="text-lg font-semibold mb-4">üå≥ –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ—Ä–µ–≤—å—è –¥–ª—è –ø–æ—Å–∞–¥–∫–∏</h3>

      {availableTrees.length === 0 ? (
        <div className="text-center py-8">
          <div className="text-4xl mb-2">üå±</div>
          <p className="text-gray-600">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ—Ä–µ–≤—å–µ–≤ –¥–ª—è –ø–æ—Å–∞–¥–∫–∏</p>
          <p className="text-sm text-gray-500 mt-1">–î–µ—Ä–µ–≤—å—è –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –¥–æ–Ω–æ—Ä–∞–º–∏</p>
        </div>
      ) : (
        <div className="space-y-3 max-h-64 overflow-y-auto">
          {availableTrees.map(tree => (
            <div key={tree.id} className="p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
              <div className="flex justify-between items-start">
                <div className="flex-1">
                  <div className="flex items-center gap-2 mb-1">
                    <div className="font-medium text-green-800">–ó–∞–∫–∞–∑ #{tree.id}</div>
                    <span className="inline-block px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full">
                      {tree.treeCount} {tree.treeCount === 1 ? "–¥–µ—Ä–µ–≤–æ" : tree.treeCount < 5 ? "–¥–µ—Ä–µ–≤–∞" : "–¥–µ—Ä–µ–≤—å–µ–≤"}
                    </span>
                  </div>
                  <div className="text-sm text-gray-600 mb-1">{tree.location}</div>
                  <div className="text-xs text-gray-500 mb-1">–î–æ–Ω–æ—Ä: {tree.donor}</div>
                  <div className="text-xs text-green-600 font-medium">
                    –ù–∞–≥—Ä–∞–¥–∞: {(tree.treeCount * 0.008).toFixed(4)} ETH
                  </div>
                </div>
                <div className="text-right">
                  <span className="inline-block px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full">
                    –î–æ—Å—Ç—É–ø–Ω–æ
                  </span>
                </div>
              </div>
            </div>
          ))}
        </div>
      )}

      <div className="mt-4 pt-4 border-t border-gray-200">
        <div className="grid grid-cols-2 gap-4 text-sm">
          <div className="text-center">
            <div className="font-semibold text-gray-800">{totalTreesCount}</div>
            <div className="text-gray-500">–í—Å–µ–≥–æ –¥–µ—Ä–µ–≤—å–µ–≤</div>
          </div>
          <div className="text-center">
            <div className="font-semibold text-green-600">{availableTreesCount}</div>
            <div className="text-gray-500">–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø–æ—Å–∞–¥–∫–∏</div>
          </div>
        </div>
        <div className="mt-2 text-xs text-gray-500 text-center">
          {availableTrees.length} –∑–∞–∫–∞–∑(–æ–≤) ‚Ä¢ {availableTreesCount} –¥–µ—Ä–µ–≤—å–µ–≤
        </div>
      </div>

      <div className="mt-4 p-3 bg-yellow-50 rounded-lg">
        <div className="text-sm text-yellow-800">
          <div className="font-semibold mb-1">üí° –ö–∞–∫ –ø–æ—Å–∞–¥–∏—Ç—å –¥–µ—Ä–µ–≤–æ?</div>
          <ul className="space-y-1 text-xs">
            <li>‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–∫–∞–∑ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ</li>
            <li>‚Ä¢ –ó–∞–ø–æ–º–Ω–∏—Ç–µ ID –∑–∞–∫–∞–∑–∞</li>
            <li>‚Ä¢ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è</li>
            <li>‚Ä¢ –í–≤–µ–¥–∏—Ç–µ ID –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –ø–æ—Å–∞–¥–∫–∏</li>
          </ul>
        </div>
      </div>
    </div>
  );
};

export default AvailableTrees;

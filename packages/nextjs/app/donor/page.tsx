"use client";

import { useState } from "react";
import { useAccount } from "wagmi";
import { CurrencyDollarIcon, HeartIcon } from "@heroicons/react/24/outline";
import { useScaffoldReadContract, useScaffoldWriteContract } from "~~/hooks/scaffold-eth";

const DonorPage = () => {
  const { address: connectedAddress } = useAccount();
  const [species, setSpecies] = useState("");
  const [location, setLocation] = useState("");
  const [isLoading, setIsLoading] = useState(false);

  // –ß–∏—Ç–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const { data: userStats } = useScaffoldReadContract({
    contractName: "TreeChain",
    functionName: "getUserStats",
    args: [connectedAddress],
  });

  // –ß–∏—Ç–∞–µ–º —Ü–µ–Ω—É –¥–µ—Ä–µ–≤–∞
  const { data: treePrice } = useScaffoldReadContract({
    contractName: "TreeChain",
    functionName: "TREE_PRICE",
  });

  // –•—É–∫ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –¥–µ—Ä–µ–≤–∞
  const { writeContractAsync: purchaseTreeAsync } = useScaffoldWriteContract({
    contractName: "TreeChain",
  });

  const handlePurchaseTree = async () => {
    if (!species || !location) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è");
      return;
    }

    if (!treePrice) {
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –¥–µ—Ä–µ–≤–∞");
      return;
    }

    setIsLoading(true);
    try {
      await purchaseTreeAsync({
        functionName: "purchaseTree",
        args: [species, location],
        value: treePrice,
      });

      alert("–î–µ—Ä–µ–≤–æ —É—Å–ø–µ—à–Ω–æ –∫—É–ø–ª–µ–Ω–æ! –í—ã –ø–æ–ª—É—á–∏–ª–∏ NFT —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç.");
      setSpecies("");
      setLocation("");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –¥–µ—Ä–µ–≤–∞:", error);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –¥–µ—Ä–µ–≤–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.");
    } finally {
      setIsLoading(false);
    }
  };

  if (!connectedAddress) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="text-center">
          <h1 className="text-2xl font-bold mb-4">–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫</h1>
          <p className="text-gray-600">–î–ª—è –ø–æ–∫—É–ø–∫–∏ –¥–µ—Ä–µ–≤—å–µ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫</p>
        </div>
      </div>
    );
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="max-w-4xl mx-auto">
        <div className="text-center mb-8">
          <HeartIcon className="h-16 w-16 mx-auto mb-4 text-red-500" />
          <h1 className="text-4xl font-bold text-green-600 mb-4">üå≥ –ü–æ–∫—É–ø–∫–∞ –¥–µ—Ä–µ–≤–∞</h1>
          <p className="text-lg text-gray-600">–ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã, –∫—É–ø–∏–≤ NFT —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–µ—Ä–µ–≤–∞</p>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
        {userStats && (
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-8">
            <div className="bg-green-100 p-6 rounded-lg text-center">
              <div className="text-4xl mb-2">üå≥</div>
              <p className="text-2xl font-bold text-green-600">{userStats[0]?.toString() || "0"}</p>
              <p className="text-sm text-gray-600">–î–µ—Ä–µ–≤—å–µ–≤ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–æ</p>
            </div>
            <div className="bg-blue-100 p-6 rounded-lg text-center">
              <CurrencyDollarIcon className="h-8 w-8 mx-auto mb-2 text-blue-600" />
              <p className="text-2xl font-bold text-blue-600">{((Number(userStats[0]) || 0) * 0.01).toFixed(2)} ETH</p>
              <p className="text-sm text-gray-600">–ü–æ—Ç—Ä–∞—á–µ–Ω–æ –Ω–∞ –¥–µ—Ä–µ–≤—å—è</p>
            </div>
          </div>
        )}

        {/* –§–æ—Ä–º–∞ –ø–æ–∫—É–ø–∫–∏ */}
        <div className="bg-white rounded-lg shadow-lg p-8">
          <h2 className="text-2xl font-bold mb-6 text-center">–ö—É–ø–∏—Ç—å –¥–µ—Ä–µ–≤–æ</h2>

          <div className="space-y-6">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">–í–∏–¥ –¥–µ—Ä–µ–≤–∞ *</label>
              <input
                type="text"
                value={species}
                onChange={e => setSpecies(e.target.value)}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –î—É–±, –°–æ—Å–Ω–∞, –ë–µ—Ä–µ–∑–∞..."
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
                required
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ—Å–∞–¥–∫–∏ *</label>
              <input
                type="text"
                value={location}
                onChange={e => setLocation(e.target.value)}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞, –ø–∞—Ä–∫ –°–æ–∫–æ–ª—å–Ω–∏–∫–∏"
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
                required
              />
            </div>

            <div className="bg-gray-50 p-4 rounded-lg">
              <h3 className="font-semibold mb-2">–°—Ç–æ–∏–º–æ—Å—Ç—å:</h3>
              <p className="text-lg font-bold text-green-600">
                {treePrice ? `${(Number(treePrice) / 1e18).toFixed(4)} ETH` : "–ó–∞–≥—Ä—É–∑–∫–∞..."}
              </p>
              <p className="text-sm text-gray-600 mt-1">–í–∫–ª—é—á–∞–µ—Ç: –ø–æ—Å–∞–¥–∫—É –¥–µ—Ä–µ–≤–∞, NFT —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç, –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é</p>
            </div>

            <button
              onClick={handlePurchaseTree}
              disabled={isLoading || !species || !location}
              className="w-full bg-green-600 text-white py-3 px-6 rounded-md font-semibold hover:bg-green-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors"
            >
              {isLoading ? "–ü–æ–∫—É–ø–∫–∞..." : "–ö—É–ø–∏—Ç—å –¥–µ—Ä–µ–≤–æ"}
            </button>
          </div>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ */}
        <div className="mt-8 bg-blue-50 p-6 rounded-lg">
          <h3 className="text-lg font-semibold mb-4">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</h3>
          <div className="space-y-3">
            <div className="flex items-start">
              <span className="bg-green-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm font-bold mr-3 mt-0.5">
                1
              </span>
              <p>–í—ã –ø–æ–∫—É–ø–∞–µ—Ç–µ NFT —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–µ—Ä–µ–≤–∞ –∑–∞ 0.01 ETH</p>
            </div>
            <div className="flex items-start">
              <span className="bg-green-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm font-bold mr-3 mt-0.5">
                2
              </span>
              <p>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å —Å–∞–∂–∞–µ—Ç –¥–µ—Ä–µ–≤–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞</p>
            </div>
            <div className="flex items-start">
              <span className="bg-green-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm font-bold mr-3 mt-0.5">
                3
              </span>
              <p>–ú—ã –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –ø–æ—Å–∞–¥–∫—É –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –±–ª–æ–∫—á–µ–π–Ω</p>
            </div>
            <div className="flex items-start">
              <span className="bg-green-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm font-bold mr-3 mt-0.5">
                4
              </span>
              <p>–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ NFT —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å –≥–µ–æ–ø—Ä–∏–≤—è–∑–∫–æ–π</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default DonorPage;

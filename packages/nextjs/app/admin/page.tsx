"use client";

import { useState } from "react";
import { useAccount } from "wagmi";
import { CheckIcon, EyeIcon, ShieldCheckIcon, XMarkIcon } from "@heroicons/react/24/outline";
import { useScaffoldReadContract, useScaffoldWriteContract } from "~~/hooks/scaffold-eth";

const AdminPage = () => {
  const { address: connectedAddress } = useAccount();
  const [selectedTreeId, setSelectedTreeId] = useState("");
  const [isLoading, setIsLoading] = useState(false);

  // –ß–∏—Ç–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–µ—Ä–µ–≤–µ
  const { data: treeData, refetch: refetchTree } = useScaffoldReadContract({
    contractName: "TreeChain",
    functionName: "getTree",
    args: selectedTreeId ? [BigInt(selectedTreeId)] : undefined,
  });

  // –•—É–∫ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–µ—Ä–µ–≤–∞
  const { writeContractAsync: verifyTreeAsync } = useScaffoldWriteContract({
    contractName: "TreeChain",
  });

  const handleVerifyTree = async (approved: boolean) => {
    if (!selectedTreeId) return;

    setIsLoading(true);
    try {
      await verifyTreeAsync({
        functionName: "verifyTree",
        args: [BigInt(selectedTreeId), approved],
      });

      alert(`–î–µ—Ä–µ–≤–æ ${approved ? "–æ–¥–æ–±—Ä–µ–Ω–æ" : "–æ—Ç–∫–ª–æ–Ω–µ–Ω–æ"}!`);
      refetchTree();
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:", error);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.");
    } finally {
      setIsLoading(false);
    }
  };

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
  const { data: owner } = useScaffoldReadContract({
    contractName: "TreeChain",
    functionName: "owner",
  });

  const isAdmin = connectedAddress && owner && connectedAddress.toLowerCase() === owner.toLowerCase();

  if (!connectedAddress) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="text-center">
          <h1 className="text-2xl font-bold mb-4">–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫</h1>
          <p className="text-gray-600">–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫</p>
        </div>
      </div>
    );
  }

  if (!isAdmin) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="text-center">
          <h1 className="text-2xl font-bold mb-4">–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h1>
          <p className="text-gray-600">–¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏</p>
        </div>
      </div>
    );
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="max-w-6xl mx-auto">
        <div className="text-center mb-8">
          <ShieldCheckIcon className="h-16 w-16 mx-auto mb-4 text-blue-500" />
          <h1 className="text-4xl font-bold text-blue-600 mb-4">üõ°Ô∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</h1>
          <p className="text-lg text-gray-600">–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ—Å–∞–¥–æ–∫ –¥–µ—Ä–µ–≤—å–µ–≤ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π</p>
        </div>

        {/* –ü–æ–∏—Å–∫ –¥–µ—Ä–µ–≤–∞ */}
        <div className="bg-white rounded-lg shadow-lg p-8 mb-8">
          <h2 className="text-2xl font-bold mb-6 text-center">–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–µ—Ä–µ–≤–∞</h2>

          <div className="space-y-6">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">ID –¥–µ—Ä–µ–≤–∞ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏</label>
              <div className="flex gap-4">
                <input
                  type="number"
                  value={selectedTreeId}
                  onChange={e => setSelectedTreeId(e.target.value)}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ ID –¥–µ—Ä–µ–≤–∞"
                  className="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                />
                <button
                  onClick={() => refetchTree()}
                  className="bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 transition-colors"
                >
                  <EyeIcon className="h-5 w-5" />
                </button>
              </div>
            </div>

            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ—Ä–µ–≤–µ */}
            {treeData && (
              <div className="bg-gray-50 p-6 rounded-lg">
                <h3 className="text-lg font-semibold mb-4">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ—Ä–µ–≤–µ #{selectedTreeId}</h3>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <p>
                      <strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ä–µ–≤—å–µ–≤:</strong> {treeData.treeCount?.toString()}
                    </p>
                    <p>
                      <strong>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</strong> {treeData.location}
                    </p>
                    <p>
                      <strong>–î–æ–Ω–æ—Ä:</strong> {treeData.donor}
                    </p>
                    <p>
                      <strong>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:</strong> {treeData.executor}
                    </p>
                  </div>
                  <div>
                    <p>
                      <strong>–°—É–º–º–∞ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è:</strong> {(Number(treeData.donationAmount) / 1e18).toFixed(4)} ETH
                    </p>
                    <p>
                      <strong>–ù–∞–≥—Ä–∞–¥–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é:</strong> {(Number(treeData.rewardAmount) / 1e18).toFixed(4)} ETH
                    </p>
                    <p>
                      <strong>–°—Ç–∞—Ç—É—Å:</strong> {treeData.isVerified ? "‚úÖ –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ" : "‚è≥ –û–∂–∏–¥–∞–µ—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"}
                    </p>
                    <p>
                      <strong>–ü–æ—Å–∞–∂–µ–Ω–æ:</strong>{" "}
                      {treeData.plantedAt
                        ? new Date(Number(treeData.plantedAt) * 1000).toLocaleString()
                        : "–ù–µ –ø–æ—Å–∞–∂–µ–Ω–æ"}
                    </p>
                  </div>
                </div>

                {treeData.imageHash && (
                  <div className="mt-4">
                    <p>
                      <strong>IPFS —Ö–µ—à —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:</strong>
                    </p>
                    <p className="text-sm text-gray-600 break-all">{treeData.imageHash}</p>
                  </div>
                )}

                {treeData.documentHash && (
                  <div className="mt-2">
                    <p>
                      <strong>IPFS —Ö–µ—à –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:</strong>
                    </p>
                    <p className="text-sm text-gray-600 break-all">{treeData.documentHash}</p>
                  </div>
                )}

                {/* –ö–Ω–æ–ø–∫–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ */}
                {!treeData.isVerified && treeData.executor !== "0x0000000000000000000000000000000000000000" && (
                  <div className="mt-6 flex gap-4">
                    <button
                      onClick={() => handleVerifyTree(true)}
                      disabled={isLoading}
                      className="flex-1 bg-green-600 text-white py-3 px-6 rounded-md font-semibold hover:bg-green-700 disabled:bg-gray-400 transition-colors flex items-center justify-center gap-2"
                    >
                      <CheckIcon className="h-5 w-5" />
                      –û–¥–æ–±—Ä–∏—Ç—å
                    </button>
                    <button
                      onClick={() => handleVerifyTree(false)}
                      disabled={isLoading}
                      className="flex-1 bg-red-600 text-white py-3 px-6 rounded-md font-semibold hover:bg-red-700 disabled:bg-gray-400 transition-colors flex items-center justify-center gap-2"
                    >
                      <XMarkIcon className="h-5 w-5" />
                      –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                    </button>
                  </div>
                )}
              </div>
            )}
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã */}
        <div className="bg-blue-50 p-6 rounded-lg">
          <h3 className="text-lg font-semibold mb-4">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</h3>
          <p className="text-gray-600">
            –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—Ç–ª–∞–¥–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞–º–∏
          </p>
          <div className="mt-4">
            <a
              href="/debug"
              className="bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 transition-colors inline-flex items-center gap-2"
            >
              <EyeIcon className="h-5 w-5" />
              –û—Ç–∫—Ä—ã—Ç—å –æ—Ç–ª–∞–¥–∫—É
            </a>
          </div>
        </div>
      </div>
    </div>
  );
};

export default AdminPage;
